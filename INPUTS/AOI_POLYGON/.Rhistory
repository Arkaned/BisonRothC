names(FOWARD)[16]="Med_Scen_max"
names(FOWARD)[17]="SOC_t0_min"
names(FOWARD)[18]="SOC_t0_max"
FOWARD$SOC_BAU_20[FOWARD$SOC_BAU_20<0]<-NA
FOWARD$Low_Scenario[FOWARD$Low_Scenario<0]<-NA
FOWARD$Med_Scenario[FOWARD$Med_Scenario<0]<-NA
FOWARD$High_Scenario[FOWARD$High_Scenario<0]<-NA
FOWARD$Med_Scen_min[FOWARD$Med_Scen_min<0]<-NA
FOWARD$Med_Scen_max[FOWARD$Med_Scen_max<0]<-NA
FOWARD$SOC_BAU_20[FOWARD$SOC_BAU_20>300]<-NA
FOWARD$Low_Scenario[FOWARD$Low_Scenario>300]<-NA
FOWARD$Med_Scenario[FOWARD$Med_Scenario>300]<-NA
FOWARD$High_Scenario[FOWARD$High_Scenario>300]<-NA
FOWARD$Med_Scen_min[FOWARD$Med_Scen_min>300]<-NA
FOWARD$Med_Scen_max[FOWARD$Med_Scen_max>300]<-NA
setwd(WD_OUT)
UNC_SOC<-((FOWARD$SOC_BAU_20_max-FOWARD$SOC_BAU_20_min)/(2*FOWARD$SOC_BAU_20))*100
UNC_t0<-((FOWARD$SOC_t0_max-FOWARD$SOC_t0_min)/(2*FOWARD$SOC_t0))*100
UNC_SSM<-((FOWARD$Med_Scen_max-FOWARD$Med_Scen_min)/(2*FOWARD$Med_Scenario))*100
FOWARD[, 19]<-UNC_SOC
FOWARD[, 20]<-UNC_t0
FOWARD[, 21]<-UNC_SSM
names(FOWARD)[19]="UNC_BAU"
names(FOWARD)[20]="UNC_t0"
names(FOWARD)[21]="UNC_SSM"
writeVector(FOWARD, filename="FOWARD_AOI2", filetype="ESRI Shapefile")
library(terra)
rm(list=ls())
library(terra)
rm(list=ls())
WD_F<-("C:/TRAINING_MATERIALS_GSOCseq_MAPS_12-11-2020/OUTPUTS/3_FOWARD")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-readOGR("FOWARD_AOI1.shp")
FOWARD<-vect("FOWARD_AOI1.shp")
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-raster("SOC_MAP_AOI.tif")
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Departamento_Pergamino.shp")
Country<-vect("Bialowieza_Forest.shp")
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
# Replace Na values for zero values
FOWARD@data[is.na(FOWARD@data)] <- -999
FOWARD[is.na(FOWARD)]
FOWARD[is.na(FOWARD)][1]
FOWARD[is.na(FOWARD)][2]
FOWARD[is.na(FOWARD)][2, ]
FOWARD
# Replace Na values for zero values
FOWARD[is.na(FOWARD)] <- -999
setwd(WD_MAPS)
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20, updateValue='all')
help("rasterize")
writeRaster(Country_BAU_2040_Map,filename=paste0(name,"_GSOCseq_finalSOC_BAU_Map030"),overwrite=TRUE)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
# Points to Raster Low Scenario
Country_Lwr_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Lw_Sc, updateValue='all')
writeRaster(Country_Lwr_2040_Map,filename="_GSOCseq_finalSOC_SSM1_Map030.tiff",overwrite=TRUE)
# Points to Raster Med Scenario
Country_Med_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Md_Sc, updateValue='all')
writeRaster(Country_Med_2040_Map,filename="_GSOCseq_finalSOC_SSM2_Map030",overwrite=TRUE)
# Points to Raster Med Scenario
Country_Med_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Md_Sc, updateValue='all')
writeRaster(Country_Med_2040_Map,filename="_GSOCseq_finalSOC_SSM2_Map030.tiff",overwrite=TRUE)
# Points to Raster High Scenario
Country_Hgh_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Hgh_S, updateValue='all')
writeRaster(Country_Hgh_2040_Map,filename="_GSOCseq_finalSOC_SSM3_Map030.tiff",overwrite=TRUE)
# Points to Raster initial SOC (t0) 2018/2020
Country_SOC_2018_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_t0, updateValue='all')
writeRaster(Country_SOC_2018_Map,filename="_GSOCseq_T0_Map030.tiff",overwrite=TRUE)
Country_BAU_2040_Map
Country_Lwr_2040_Map
Country_Med_2040_Map
Country_Hgh_2040_Map
Country_SOC_2018_Map
FOWARD
FOWARD$SOC_BAU_20
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
setwd(WD_MAPS)
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
rast("_GSOCseq_finalSOC_BAU_Map030.tiff")
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
Country_BAU_2040_Map
FOWARD
Country_raster
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
# Points to Raster Low Scenario
Country_Lwr_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Lw_Sc, updateValue='all')
writeRaster(Country_Lwr_2040_Map,filename="_GSOCseq_finalSOC_SSM1_Map030.tiff",overwrite=TRUE)
# Points to Raster Med Scenario
Country_Med_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Md_Sc, updateValue='all')
writeRaster(Country_Med_2040_Map,filename="_GSOCseq_finalSOC_SSM2_Map030.tiff",overwrite=TRUE)
# Points to Raster High Scenario
Country_Hgh_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$Hgh_S, updateValue='all')
writeRaster(Country_Hgh_2040_Map,filename="_GSOCseq_finalSOC_SSM3_Map030.tiff",overwrite=TRUE)
# Points to Raster initial SOC (t0) 2018/2020
Country_SOC_2018_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_t0, updateValue='all')
writeRaster(Country_SOC_2018_Map,filename="_GSOCseq_T0_Map030.tiff",overwrite=TRUE)
Diff_BAU_SOC_2018<-Country_BAU_2040_Map-Country_SOC_2018_Map
help("writeRaster")
Diff_BAU_SOC_2018
help(rasterize)
FOWARD$SOC_BAU_20
help("paste0")
Diff_BAU_SOC_2018<-Country_BAU_2040_Map-Country_SOC_2018_Map
writeRaster(Diff_BAU_SOC_2018,filename=paste0(name,"_GSOCseq_AbsDiff_BAU_Map030",overwrite=TRUE)
Diff_Lw_SOC_2018<-Country_Lwr_2040_Map-Country_SOC_2018_Map
writeRaster(Diff_BAU_SOC_2018/20,filename=paste0(name,"_GSOCseq_ASR_BAU_Map030"),overwrite=TRUE)
writeRaster(Diff_BAU_SOC_2018,filename=paste0(name,"_GSOCseq_AbsDiff_BAU_Map030.tiff",overwrite=TRUE)
Diff_BAU_SOC_2018<-Country_BAU_2040_Map-Country_SOC_2018_Map
writeRaster(Diff_BAU_SOC_2018,filename=paste0(name,"_GSOCseq_AbsDiff_BAU_Map030.tiff"),overwrite=TRUE)
writeRaster(Diff_BAU_SOC_2018/20,filename=paste0(name,"_GSOCseq_ASR_BAU_Map030.tiff"),overwrite=TRUE)
Diff_Md_SOC_2018<-Country_Med_2040_Map-Country_SOC_2018_Map
writeRaster(Diff_Md_SOC_2018,filename=paste0(name,"_GSOCseq_AbsDiff_SSM2_Map030.tiff"),overwrite=TRUE)
writeRaster(Diff_Md_SOC_2018/20,filename=paste0(name,"_GSOCseq_ASR_SSM2_Map030.tiff"),overwrite=TRUE)
Diff_Md_SOC_2018
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
FOWARD
# Replace Na values for zero values
FOWARD[is.na(FOWARD)] <- 0
FOWARD
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
# Replace Na values for zero values
FOWARD[is.na(FOWARD)] <- 0
setwd(WD_MAPS)
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
FOWARD
FOWARD$SOC_BAU_20
# Replace Na values for zero values
FOWARD[is.na(FOWARD[])] <- 0
FOWARD
FOWARD[]
FOWARD$SOC_BAU_20
FOWARD[]
FOWARD[[]]
FOWARD[,]
# Replace Na values for zero values
FOWARD[is.na(FOWARD[,])] <- 0
FOWARD$SOC_BAU_20
FOWARD$SOC_BAU_20
FOWARD[is.na(FOWARD$SOC_BAU_20)]
rm
rm
rm
rm
rm
rm
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
# Replace Na values for zero values
FOWARD[is.na(FOWARD[,])] <- 0
setwd(WD_MAPS)
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
FOWARD$data
FOWARD[]$data
FOWARD
FOWARD
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
FOWARD$SOC_BAU_20
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0# Points to Raster BAU
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$Lw_Sc)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$Md_Sc)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$Hgh_S)]<-0
setwd(WD_MAPS)
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
writeRaster(Country_BAU_2040_Map,filename="_GSOCseq_finalSOC_BAU_Map030.tiff",overwrite=TRUE)
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$Lw_Sc)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$Md_Sc)]<-0
FOWARD$SOC_BAU_20[is.na(FOWARD$Hgh_S)]<-0
FOWARD$SOC_BAU_20
Country_raster
FOWARD
help("writeRaster")
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
#Open FORWARD vector
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
#Open SOC MAP (master layer)
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
#Creates emtpy raster
empty_raster<-SOC_MAP*0
# Open the country vector boundaries
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
FOWARD
FOWARD$SOC_BAU_20
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
FOWARD$SOC_BAU_20
setwd(WD_MAPS)
help("rasterize")
help("rasterize")
help("rasterize")
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
Country_BAU_2040_Map
FOWARD$SOC_BAU_20
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20)
Country_BAU_2040_Map
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster)
Country_BAU_2040_Map
Country_BAU_2040_Map<-terra::rasterize(FOWARD$SOC_BAU_20, Country_raster)
FOWARD
FOWARD["SOC_BAU_20"]
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster)
Country_BAU_2040_Map
Country_raster
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster, overwrite=TRUE)
Country_BAU_2040_Map
Country_BAU_2040_Map<-terra::rasterize(FOWARD$SOC_BAU_20, Country_raster, overwrite=TRUE)
FOWARD["SOC_BAU_20"]
FOWARD["SOC_BAU_20"][1:20]
FOWARD$SOC_BAU_20
length(FOWARD$SOC_BAU_20)
typeof(FOWARD$SOC_BAU_20)
length(FOWARD["SOC_BAU_20"])
typeof(FOWARD["SOC_BAU_20"])
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, overwrite=TRUE, update=TRUE)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, update=TRUE)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, overwrite=TRUE)
Country_BAU_2040_Map
Country_raster
plot(Country_raster)
plot(FOWARD)
plot(FOWARD$SOC_BAU_20)
plot(FOWARD["SOC_BAU_20"])
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster)
Country_BAU_2040_Map
plot(Country_BAU_2040_Map)
Country_BAU_2040_Map[]
help("rasterize")
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20, updateValue='all')
Country_BAU_2040_Map
writeRaster(Country_BAU_2040_Map,filename=paste0(name,"_GSOCseq_finalSOC_BAU_Map030"),format="GTiff",overwrite=TRUE)
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20, updateValue='all')
writeRaster(Country_BAU_2040_Map,filename=paste0(name,"_GSOCseq_finalSOC_BAU_Map030"),format="GTiff",overwrite=TRUE)
writeRaster(Country_BAU_2040_Map,filename=paste0(name,"_GSOCseq_finalSOC_BAU_Map030.tiff"),overwrite=TRUE)
plot(rast("_GSOCseq_finalSOC_BAU_Map030.tiff"))
rast("_GSOCseq_finalSOC_BAU_Map030.tiff")
help("rasterize")
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster ,FOWARD$SOC_BAU_20, update='all')
traceback()
FOWARD
Country_BAU_2040_Map<-rasterize(FOWARD$SOC_BAU_20, Country_raster, update='all')
Country_BAU_2040_Map<-rasterize(FOWARD["SOC_BAU_20"], Country_raster, update='all')
nrow(FOWARD$SOC_BAU_20)
nrow(FOWARD["SOC_BAU_20"])
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster, FOWARD["SOC_BAU_20"] update='all')
Country_BAU_2040_Map<-rasterize(FOWARD, Country_raster, FOWARD["SOC_BAU_20"], update='all')
typeof(FOWARD["SOC_BAU_20"])
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD["SOC_BAU_20"], update='all')
library(terra)
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
setwd(WD_MAPS)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD["SOC_BAU_20"], update='all')
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD@data["SOC_BAU_20"], update='all')
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD["SOC_BAU_20"], update='all')
FOWARD["SOC_BAU_20"]
FOWARD["SOC_BAU_20"][1]
FOWARD["SOC_BAU_20"][100]
typeof(FOWARD["SOC_BAU_20"][1])
as.numeric(FOWARD["SOC_BAU_20"])
length(FOWARD["SOC_BAU_20"])
length(FOWARD$SOC_BAU_20)
typeof(FOWARD$SOC_BAU_20)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, update='all')
FOWARD$SOC_BAU_20[1]
Country_BAU_2040_Map<-terra::rasterize(FOWARD$SOC_BAU_20, Country_raster, FOWARD$SOC_BAU_20, update='all')
Country_BAU_2040_Map<-terra::rasterize(FOWARD$SOC_BAU_20, Country_raster, length(FOWARD$SOC_BAU_20), update='all')
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster, length(FOWARD$SOC_BAU_20), update='all')
length(FOWARD$SOC_BAU_20)
FOWARD["SOC_BAU_20"]
Country_raster
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster, length(FOWARD$SOC_BAU_20), update='all')
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster, length(FOWARD$SOC_BAU_20), updateAll='all')
Country_BAU_2040_Map
r <- rast(xmin=0, ncols=18, nrows=18)
# generate points
set.seed(1)
p <- spatSample(r, 1000, xy=TRUE, replace=TRUE)
# rasterize points as a matrix
x <- rasterize(p, r, fun=sum)
plot(x)
y <- rasterize(p, r, value=1:nrow(p), fun=max)
plot(r)
r
plot(p)
Country<-rast("Bialowieza_Forest_3_2.shp")
setwd(WD_AOI)
Country<-rast("Bialowieza_Forest_3_2.shp")
Country<-vect("Bialowieza_Forest_3_2.shp")
help(rasterize)
Country_BAU_2040_Map<-terra::rasterize(FOWARD["SOC_BAU_20"], Country_raster, length(FOWARD$SOC_BAU_20), update=TRUE)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, update=TRUE)
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
FOWARD$SOC_BAU_20[is.na(FOWARD$SOC_BAU_20)]<-0
setwd(WD_MAPS)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, update=TRUE)
FOWARD$SOC_BAU_20
plot(FOWARD$SOC_BAU_20)
plot(FOWARD)
plot(FOWARD)[1]
FOWARD[1]
FOWARD[[1]]
FOWARD[[2]]
plot(FOWARD[[2]])
plot(project(FOWARD))
plot(project(FOWARD), y="EPSG:4326")
typeof(FOWARD$SOC_BAU_20)
typeof(FOWARD$SOC_BAU_20[1])
typeof(FOWARD$SOC_BAU_20[2])
FOWARD$SOC_BAU_20[1]
FOWARD$SOC_BAU_20
length(FOWARD$SOC_BAU_20[1])
length(FOWARD$SOC_BAU_20)
nrow(FOWARD$SOC_BAU_20[1])
FOWARD$SOC_BAU_20
nrow(FOWARD$SOC_BAU_20[1])
nrow(FOWARD$SOC_BAU_20)
nrow(FOWARD)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, update=TRUE)
traceback()
r <- rast(xmin=0, ncols=18, nrows=18)
# generate points
set.seed(1)
p <- spatSample(r, 1000, xy=TRUE, replace=TRUE)
# rasterize points as a matrix
x <- rasterize(p, r, fun=sum)
y <- rasterize(p, r, value=1:nrow(p), fun=max)
# rasterize points as a SpatVector
pv <- vect(p)
xv <- rasterize(pv, r, fun=sum)
# Polygons
f <- system.file("ex/lux.shp", package="terra")
v <- vect(f)
r <- rast(v, ncols=75, nrows=100)
z <- rasterize(v, r, "NAME_2")
plot(z)
lines(v)
rm(list=ls())
WD_F<-("H:/BisonRothC/OUTPUTS/3_FORWARD/FOWARD_AOI1")
WD_SOC<-("H:/BisonRothC/INPUTS/SOC_MAP")
WD_AOI<-("H:/BisonRothC/INPUTS/AOI_POLYGON")
WD_MAPS<-("H:/BisonRothC/OUTPUTS/4_MAPS")
#Define the name of the Country ("ISO3CountryCode")
name<-"Bialowieza"
setwd(WD_F)
FOWARD<-vect("FOWARD_AOI1.shp")
setwd(WD_SOC)
SOC_MAP<-rast("SOC_MAP_AOI.tif")
empty_raster<-SOC_MAP*0
setwd(WD_AOI)
Country<-vect("Bialowieza_Forest_3_2.shp")
# Cut the raster with the country vector
Country_raster<-crop(empty_raster,Country)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD$SOC_BAU_20, update=TRUE)
help("any,SpatRaster-method")
any(FOWARD$SOC_BAU_20)
names(forwardsolve())
names(FOWARD
)
names(FOWARD$SOC_BAU_20
)
names(FOWARD$SOC_BAU_20)
names(FOWARD["SOC_BAU_20"]
)
Country_BAU_2040_Map<-terra::rasterize(FOWARD, Country_raster, FOWARD["SOC_BAU_20"], update=TRUE)
traceback()
###################### ATTEMPT AT A SOLUTION FOR ERROR: "Error in update && (!hasValues(y)) : invalid 'x' type in 'x && y'" ##############
library(rethinking)
install.packages("rethinking")
